define(["exports","../graph"],function(exports,_graph){"use strict";function applyModel(graph,edges,name,densitiy){console.log("\n"+name+" | "+graph.directed+" | "+densitiy),console.time("init");var _iteratorNormalCompletion3=!0,_didIteratorError3=!1,_iteratorError3=void 0;try{for(var _step3,_iterator3=nodes[Symbol.iterator]();!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=!0){var node=_step3.value;graph.addNode(node)}}catch(err){_didIteratorError3=!0,_iteratorError3=err}finally{try{!_iteratorNormalCompletion3&&_iterator3["return"]&&_iterator3["return"]()}finally{if(_didIteratorError3)throw _iteratorError3}}var _iteratorNormalCompletion4=!0,_didIteratorError4=!1,_iteratorError4=void 0;try{for(var _step4,_iterator4=edges[Symbol.iterator]();!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=!0){var edge=_step4.value;graph.addEdge(edge[0],edge[1])}}catch(err){_didIteratorError4=!0,_iteratorError4=err}finally{try{!_iteratorNormalCompletion4&&_iterator4["return"]&&_iterator4["return"]()}finally{if(_didIteratorError4)throw _iteratorError4}}console.timeEnd("init"),console.time("Cycle check"),console.log("Cycle: "+graph.hasCycle()),console.timeEnd("Cycle check"),console.time("Edges check"),console.log("Edges: "+graph.edges.length),console.timeEnd("Edges check")}var _interopRequire=function(obj){return obj&&obj.__esModule?obj["default"]:obj},graphjs=_interopRequire(_graph);window.graphjs=graphjs,console.log("graphjs loaded"),console.log("length: "+length);var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=["Graph","AcyclicGraph","Tree"][Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var _name=_step.value,_iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _step2,_iterator2=edge_array[Symbol.iterator]();!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var edges=_step2.value,graph=new graphjs[_name],dgraph=new graphjs[_name](!0);applyModel(graph,edges,_name,edges.density),applyModel(dgraph,edges,_name,edges.density)}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{!_iteratorNormalCompletion2&&_iterator2["return"]&&_iterator2["return"]()}finally{if(_didIteratorError2)throw _iteratorError2}}}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator["return"]&&_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError}}console.time("preparation");for(var length=20,nodes=[],edge_array=[],densities=[0,.01,.5,1,10],i=0;length>i;++i)nodes.push(i);var _iteratorNormalCompletion3=!0,_didIteratorError3=!1,_iteratorError3=void 0;try{for(var _step3,_iterator3=densities[Symbol.iterator]();!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=!0){for(var density=_step3.value,edges=[],i=0;i<Math.pow(length,2)*density;++i)edges.push([Math.floor(Math.random()*length),Math.floor(Math.random()*length)]);edges.density=density,edge_array.push(edges)}}catch(err){_didIteratorError3=!0,_iteratorError3=err}finally{try{!_iteratorNormalCompletion3&&_iterator3["return"]&&_iterator3["return"]()}finally{if(_didIteratorError3)throw _iteratorError3}}var static_edges=function(){var _static_edges=[],_iteratorNormalCompletion4=!0,_didIteratorError4=!1,_iteratorError4=void 0;try{for(var _step4,_iterator4=nodes[Symbol.iterator]();!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=!0){var node=_step4.value;_static_edges.push([Math.floor(Math.abs(Math.sin(node))*(length-1)),Math.floor(Math.abs(Math.cos(node))*(length-1))])}}catch(err){_didIteratorError4=!0,_iteratorError4=err}finally{try{!_iteratorNormalCompletion4&&_iterator4["return"]&&_iterator4["return"]()}finally{if(_didIteratorError4)throw _iteratorError4}}return _static_edges}();static_edges.density=1,edge_array.push(static_edges),console.timeEnd("preparation")});