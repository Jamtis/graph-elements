System.register([],function(_export){var _slicedToArray,_createClass,_classCallCheck,D3SVG;return{setters:[],execute:function(){"use strict";_slicedToArray=function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr)){for(var _step,_arr=[],_iterator=arr[Symbol.iterator]();!(_step=_iterator.next()).done&&(_arr.push(_step.value),!i||_arr.length!==i););return _arr}throw new TypeError("Invalid attempt to destructure non-iterable instance")},_createClass=function(){function defineProperties(target,props){for(var key in props){var prop=props[key];prop.configurable=!0,prop.value&&(prop.writable=!0)}Object.defineProperties(target,props)}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_classCallCheck=function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")},D3SVG=function(){var $force=Symbol(),$svg=Symbol(),$dom_svg=Symbol(),$circle_data=Symbol(),$path_data=Symbol(),$graph=Symbol();return function(){function D3SVG(svg,graph){var _this=this;if(_classCallCheck(this,D3SVG),!svg)throw Error("No svg element specified");if(!graph)throw Error("No graph specified");this[$graph]=graph,this[$dom_svg]=svg,this[$force]=d3.layout.force(),this[$svg]=window.svg=d3.select(svg),this[$force].on("tick",function(){_this[$circle_data].attr("transform",function(node){return"translate("+node.x+","+node.y+")"}),_this[$path_data].attr("d",function(_ref){var _ref2=_slicedToArray(_ref,3),source=_ref2[0],intermediate=_ref2[1],target=_ref2[2];return"M"+source.x+","+source.y+"S"+intermediate.x+","+intermediate.y+" "+target.x+","+target.y})}),this.update()}return _createClass(D3SVG,{update:{value:function(){var _getComputedStyle=getComputedStyle(this[$dom_svg]),width=_getComputedStyle.width,height=_getComputedStyle.height,nodes=[],edges=[],intermediates=[],links=[],node_map=new Map,_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=this[$graph].nodes.keys()[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var node=_step.value,wrap={value:node,x:Math.random()*width,y:height/2};node_map.set(node,wrap),nodes.push(wrap)}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator["return"]&&_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError}}var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _step2,_iterator2=this[$graph].edges[Symbol.iterator]();!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var _step2$value=_slicedToArray(_step2.value,2),source=_step2$value[0],target=_step2$value[1],source_wrap=node_map.get(source),target_wrap=node_map.get(target),intermediate={};intermediates.push(intermediate),links.push({source:source_wrap,target:intermediate},{source:intermediate,target:target_wrap}),edges.push([source_wrap,intermediate,target_wrap])}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{!_iteratorNormalCompletion2&&_iterator2["return"]&&_iterator2["return"]()}finally{if(_didIteratorError2)throw _iteratorError2}}this[$force].size([parseInt(width),parseInt(height)]),this[$force].nodes(nodes.concat(intermediates)).links(links),this[$circle_data]=this[$svg].selectAll("circle").data(nodes),this[$path_data]=this[$svg].selectAll("path").data(edges),this[$circle_data].enter().append("circle").attr("r",5).call(this[$force].drag),this[$path_data].enter().append("path"),this[$circle_data].exit().remove(),this[$path_data].exit().remove()}},graph:{get:function(){return this[$graph]}},force:{get:function(){return this[$force]}}}),D3SVG}()}(),_export("D3SVG",D3SVG)}}});