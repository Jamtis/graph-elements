define(["exports","../graph","../extensions/2d3"],function(exports,_graph,_extensions2d3){"use strict";var _iteratorNormalCompletion,_didIteratorError,_iteratorError,_iterator,_step,Tree=(_graph.Graph,_graph.AcyclicGraph,_graph.Tree),D3SVG=_extensions2d3.D3SVG;!function(){var log=function(event){console.log(event.type)},svg=document.querySelector("svg"),load=svg.querySelector("#load");window.graph=new Tree(!0);for(var size=200,i=0;size>i;++i)graph.addNode(i);for(var i=0;2.05*size>i;++i)graph.addEdge(i%size,Math.floor(Math.random()*size));window.d3svg=new D3SVG(svg,graph,{drawing:!1,size:{resizing:!1}});var force=d3svg.force;force.start(),setTimeout(function(){svg.classList.add("resolved")},500),setTimeout(function(){svg.removeChild(load),d3svg.drawing=!0,d3svg.resizing=!0,d3svg.resize(),force.linkStrength=1,force.resume()},1300),addEventListener("resize",function(){d3svg.resize()}),_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(_iterator=["pinch","up","down","track","trackstart","trackend","tap","hold","holdpulse","release"][Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var v=_step.value;PolymerGestures.addEventListener(svg,v,log)}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator["return"]&&_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError}}}()});